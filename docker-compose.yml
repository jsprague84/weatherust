services:
  weatherust:
    image: ghcr.io/jsprague84/weatherust:${WEATHERUST_TAG:-latest}
    env_file:
      - .env
    restart: "no"

  # Optional: Speedtest notifier service (image published separately)
  speedynotify:
    image: ghcr.io/jsprague84/speedynotify:${SPEEDYNOTIFY_TAG:-latest}
    env_file:
      - .env
    restart: "no"

  # Docker monitor: checks container health and CPU/MEM thresholds
  dockermon:
    image: ghcr.io/jsprague84/dockermon:${DOCKERMON_TAG:-latest}
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: "no"

  # Long-running runners so Ofelia can exec with full env inherited
  weatherust_runner:
    image: ghcr.io/jsprague84/weatherust:${WEATHERUST_TAG:-latest}
    container_name: weatherust_runner
    env_file:
      - .env
    entrypoint: ["/bin/sh", "-c", "sleep infinity"]
    restart: unless-stopped

  speedynotify_runner:
    image: ghcr.io/jsprague84/speedynotify:${SPEEDYNOTIFY_TAG:-latest}
    container_name: speedynotify_runner
    env_file:
      - .env
    entrypoint: ["/bin/sh", "-c", "sleep infinity"]
    restart: unless-stopped

  dockermon_runner:
    image: ghcr.io/jsprague84/dockermon:${DOCKERMON_TAG:-latest}
    container_name: dockermon_runner
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    entrypoint: ["/bin/sh", "-c", "sleep infinity"]
    restart: unless-stopped

  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${ENV_FILE_HOST_PATH}:/ofelia/.env:ro
    command: daemon --docker
    labels:
      - "ofelia.enabled=true"
      - "ofelia.job-exec.weatherust.schedule=0 30 5 * * *"
      - "ofelia.job-exec.weatherust.container=weatherust_runner"
      - "ofelia.job-exec.weatherust.command=/app/weatherust --zip 52726 --units imperial --quiet"

      # Speedtest daily at 02:10
      - "ofelia.job-exec.speedynotify.schedule=0 10 2 * * *"
      - "ofelia.job-exec.speedynotify.container=speedynotify_runner"
      - "ofelia.job-exec.speedynotify.command=/app/speedynotify --quiet --min-down ${SPEEDTEST_MIN_DOWN} --min-up ${SPEEDTEST_MIN_UP}"

      # Docker monitor every 5 minutes (exec inside runner to inherit env_file)
      - "ofelia.job-exec.dockermon.schedule=0 */5 * * * *"
      - "ofelia.job-exec.dockermon.container=dockermon_runner"
      - "ofelia.job-exec.dockermon.command=/app/dockermon --quiet"
